//Time complexity : O(n*n)
#include <stdio.h>

void swap(int *a,int *b)
{
    int t=*a;
    *a=*b;
    *b=t;
}
void sort(int a[],int m,int b[],int n)
{
    int min=a[0],k=0,c=0;
   if(b[0]==0)
    {
        for(int i=1;i<m;i++)
        {
            if(min>a[i])
            {
                printf("1st array cannot be sorted ");
                break;
            }
        }
    }
    if(b[1]==1) 
    {
       for(int i=k;i<n;i++)
       {
           if(a[i]>a[i+1])
           { c++;
          
               swap(&a[i],&a[i+1]);
           }
       }
    }
    if(c!=0)
    printf("A can be sorted and sorted %d times",c);
}
int main()
{
   int a[] = {1, 2, 5, 3, 4, 6};
   int b[] = {0, 1, 1, 1, 0};
   int m=sizeof(a)/sizeof(a[0]);
   int n=sizeof(b)/sizeof(b[0]);
   
sort(a,m,b,n);
    return 0;
}
