//Time complexity : O(n*n)
#include <stdio.h>

int cmp(const void *a,const void *b)
{
    return (*(int*)a-*(int*)b);
}

void smallGreaterelement(int a[],int n)
{
    int b[n],max;
    
    for(int i=0;i<n;i++)
    b[i]=a[i];
    
    qsort(b,n,sizeof(int),cmp);
    max=b[n-1];
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            if(a[i]==b[j] && a[i]!=max)
            {
                printf("%d ",b[j+1]);
            }
            else if(max==a[i])
            {
                printf("_");
            }
        }
    }
}

int main()
{
    int a[]={ 6,3,9,8,10,2,1,15,7};
    int n=sizeof(a)/sizeof(a[0]);
    
    smallGreaterelement(a,n);

    return 0;
}
