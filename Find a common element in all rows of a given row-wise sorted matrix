//Time complexity : O(mn)
/* 
Explanation for working of above code
Let us understand working of above code for following example.

Initially entries in last column array are N-1, i.e., {4, 4, 4, 4}
    {1, 2, 3, 4, 5},
    {2, 4, 5, 8, 10},
    {3, 5, 7, 9, 11},
    {1, 3, 5, 7, 9},

The value of min_row is 0, so values of last column index for rows with value greater than 5 is reduced by one. So column[] becomes {4, 3, 3, 3}.
    {1, 2, 3, 4, 5},
    {2, 4, 5, 8, 10},
    {3, 5, 7, 9, 11},
    {1, 3, 5, 7, 9},

The value of min_row remains 0 and and value of last column index for rows with value greater than 5 is reduced by one. So column[] becomes {4, 2, 2, 2}.
    {1, 2, 3, 4, 5},
    {2, 4, 5, 8, 10},
    {3, 5, 7, 9, 11},
    {1, 3, 5, 7, 9},

The value of min_row remains 0 and value of last column index for rows with value greater than 5 is reduced by one. So colomun[] becomes {4, 2, 1, 2}.
    {1, 2, 3, 4, 5},
    {2, 4, 5, 8, 10},
    {3, 5, 7, 9, 11},
    {1, 3, 5, 7, 9},

Now all values in current last columns of all rows is same, so 5 is returned.*/
#include <stdio.h>

int findCommon(int a[][5],int r,int c)
{
    int column[r];    // find column index
    int minrow=0;     // find min of each row
    
    //fill last column
    for(int i=0;i<r;i++)
    column[i]=c-1;
    
    //check for minrow 
    //keep finding for all column
    while(column[minrow]>=0)
    {
        for(int i=0;i<r;i++)
        {
            if(a[i][column[i]] < a[minrow][column[minrow]])
            minrow=i;
        }
    
    //reduce column
    int cnt=0;
    for(int i=0;i<r;i++)
    {
        if(a[i][column[i]] > a[minrow][column[minrow]])
        {
            
            if(column[i]==0)
            return -1;
            
            column[i] -=1;
        }
        else
        cnt++;
    }
    
    if(cnt==r)
    return a[minrow][column[minrow]];
    }
    
    return -1;
}
int main()
{
    int a[4][5]={ 
        { 1, 2, 3, 4, 5 }, 
        { 2, 4, 5, 8, 10 }, 
        { 3, 5, 7, 9, 11 }, 
        { 1, 3, 5, 7, 9 }, 
    }; 
    
    int r=4,c=5;
    
    int s=findCommon(a,r,c);
    if(s!=-1)
    printf("%d",s);
    else
    printf("No element exist");
    return 0;
}
