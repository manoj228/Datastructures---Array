
#include <stdio.h>

void conwayGame(int a[][10],int r,int c)
{
    int b[r][c],liveCount;
     for(int i=0;i<r;i++)
    {
        for(int j=0;j<c;j++)
        {
            b[i][j]=a[i][j];
        }
    }
    
     for(int i=0; i<r; i++) {                 // each row
            for(int j=0; j<c; j++) {          // each column
               liveCount = 0;                         // reset Live neigh = 0
                for(int p=-1; p<=1; p++) {                  // row-offet (-1,0,1)
                    for(int q=-1; q<=1; q++) {              // col-offset (-1,0,1)
                        if((i+p <0) ||                      // if row offset less than UPPER boundary
                           (i+p > r-1) ||        // if row offset more than LOWER boundary
                           (j+q <0) ||                      // if column offset less than LEFT boundary
                           (j+q > c-1))       // if column offset more than RIGHT boundary
                            continue;                       // skip the neighbour (if not, then ArrayIndexOutOfBounds Excp)
                        liveCount += b[i+p][j+q];   // incremeent live counter for each live neighbour
                    }
                }
                
    liveCount -= b[i][j];
    
    switch(liveCount)
    {
        case 0:
        case 1://less than 2 neighbours
        a[i][j]=0;
        break;
        
        case 2://exactly 2 neighbours
        a[i][j]=b[i][j];
        break;
        
        case 3: //exactly 3 neighbours
        a[i][j]=1;
        break;
        
        default: //more than 3 neighbours
        a[i][j]=0;
        break;
    }
            }
     }
    printgrid(a,r,c);
}

void printgrid(int a[][10],int r,int c)
{
    for(int i=0;i<r;i++)
    {
        for(int j=0;j<c;j++)
        {
            if(a[i][j]==0)
            printf(".");
            else
            printf("*");
        }printf("\n");
    }
}


int main()
{
    int a[][10] = { 
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 1, 1, 0, 0, 0, 0, 0 },
            { 0, 0, 1, 1, 0, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        };
        int r=10,c=10;
        
    conwayGame(a,r,c);
    
    
    return 0;
}
